@noreturn
fn assert(#expr: bool) : void {
    __assert(expr.__SRC__, expr.__FILE__, expr.__LINE__); // __assert is defined in libc
}

interface to_str {
    public fn to_str(fmt: Optional<String>) : String;
}

from io import print;

fn printf<#T: to_str>(fmt: String|str, #args: va_list[#T]) : void {
    ret: String;
    if (fmt is str) {
        ret = String(fmt);
    } else {
        ret = fmt;
    }
    for (a: T in va_list) {
        ret= ret.replace_one("{}", a.to_str());
    }
    print(ret);
}

impl int {
    public fn to_str(fmt: Optional<String>) : String {
        return itoa(*self);
    }
}

fn main(argc: int, argv: char**) : int {
    printf("Got {} arguments\n", argc);
    return 0;
}
